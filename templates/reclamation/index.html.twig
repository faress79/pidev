{% extends 'base.html.twig' %}

{% block title %}Reclamation Index{% endblock %}
{% block stylesheets %}
{{ parent() }}
<style>
    .d-flex {
        display: flex;
        flex-direction: row;
        flex-wrap: nowrap;
        justify-content: space-around;
    }

    table {
        width: 750px;
        border-collapse: collapse;
        margin: 50px auto;
    }

    /* Zebra striping */
    tr:nth-of-type(odd) {
        background: #eee;
    }

    th {
        background: #3498db;
        color: white;
        font-weight: bold;
    }

    td,
    th {
        padding: 10px;
        border: 1px solid #ccc;
        text-align: left;
        font-size: 18px;
    }

    /* 
Max width before this PARTICULAR table gets nasty
This query will take effect for any screen smaller than 760px
and also iPads specifically.
*/
    @media only screen and (max-width: 760px),
    (min-device-width: 768px) and (max-device-width: 1024px) {

        table {
            width: 100%;
        }

        /* Force table to not be like tables anymore */
        table,
        thead,
        tbody,
        th,
        td,
        tr {
            display: block;
        }

        /* Hide table headers (but not display: none;, for accessibility) */
        thead tr {
            position: absolute;
            top: -9999px;
            left: -9999px;
        }

        tr {
            border: 1px solid #ccc;
        }

        td {
            /* Behave  like a "row" */
            border: none;
            border-bottom: 1px solid #eee;
            position: relative;
            padding-left: 50%;
        }

        td:before {
            /* Now like a table header */
            position: absolute;
            /* Top/left values mimic padding */
            top: 6px;
            left: 6px;
            width: 45%;
            padding-right: 10px;
            white-space: nowrap;
            /* Label the data */
            content: attr(data-column);

            color: #000;
            font-weight: bold;
        }

    }

    .btn-test {
        border: none;
        color: white;
        background: #0f75bd;
        padding: 10px;
        border-radius: 3px;
        display: inline-block;
        -webkit-transition: .3s ease;
        transition: .3s ease;
    }
</style>
<!-- Font Awesome -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css" rel="stylesheet">
{% endblock %}
{% block content %}


{% block body %}
<div class="container mt-4">
    <div class="row">
        <div class="col">
            <h1 class="mb-4">Reclamation list</h1>
        </div>
        <div class="col text-end">
            <a href="{{ path('app_reclamation_new') }}" class="btn btn-success"><i class="bi bi-plus"></i> Create
                New</a>
        </div>
    </div>
    <div class="row mt-4">
        <div class="col">
            <input type="text" id="searchInput" class="form-control" placeholder="Search...">
        </div>
    </div>

    {% if reclamations|length > 0 %}
    <div style="overflow-x:auto;" class="table-responsive">
        <table class="table table-striped" id="reclamation-table">
            <thead>
                <tr>
                    <th scope="col" data-column="id">ID&nbsp;<span class="sort-icon"></span></th>
                    <th scope="col" data-column="description">Description&nbsp;<span class="sort-icon"></span></th>
                    <th scope="col" data-column="sujet">Sujet&nbsp;<span class="sort-icon"></span></th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody id="reclamationTableBody">
                {% for reclamation in reclamations %}
                <tr>
                    <td>{{ reclamation.id }}</td>
                    <td>{{ reclamation.description }}</td>
                    <td>{{ reclamation.sujet }}</td>
                    <td>
                        <div class="d-flex">
                            <a href="{{ path('app_reclamation_show', {'id': reclamation.id}) }}" class="btn-test">
                                <img src="{{ asset('asset/images/show.png') }}" alt="Show"
                                    style="width: 30px; height: 30px;">
                            </a>
                            <a href="{{ path('app_reclamation_edit', {'id': reclamation.id}) }}" class="btn-test">
                                <img src="{{ asset('asset/images/edit.png') }}" alt="Edit"
                                    style="width: 30px; height: 30px;">
                            </a>
                            {{ include('reclamation/_delete_form.html.twig') }}
                        </div>
                    </td>
                </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
    {% else %}
    <div class="alert alert-info" role="alert">
        No records found.
    </div>
    {% endif %}
</div>

<script>
    // Search functionality
    document.getElementById('searchInput').addEventListener('input', function () {
        const searchValue = this.value.toLowerCase();
        const tableRows = document.querySelectorAll('#reclamationTableBody tr');

        tableRows.forEach(function (row) {
            const rowData = row.textContent.toLowerCase();
            if (rowData.includes(searchValue)) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const table = document.getElementById('reclamation-table');
        const headers = table.querySelectorAll('thead th[data-column]');
        let sortOrder = 1;

        headers.forEach(header => {
            header.addEventListener('click', () => {
                const column = header.getAttribute('data-column');
                sortOrder *= -1; // Toggle sorting direction
                sortTable(column, sortOrder);
                updateSortIcons(header, sortOrder);
            });
        });

        function sortTable(column, order) {
            const tbody = table.querySelector('tbody');
            const rows = Array.from(tbody.querySelectorAll('tr'));

            rows.sort((a, b) => {
                let aValue = a.querySelector(`td:nth-child(${getColumnIndex(column)})`).textContent;
                let bValue = b.querySelector(`td:nth-child(${getColumnIndex(column)})`).textContent;

                // Convert ID values to numbers for proper sorting
                if (column === 'id') {
                    aValue = parseFloat(aValue);
                    bValue = parseFloat(bValue);
                } else {
                    aValue = aValue.toLowerCase();
                    bValue = bValue.toLowerCase();
                }

                if (aValue < bValue) return -1 * order;
                if (aValue > bValue) return 1 * order;
                return 0;
            });

            rows.forEach(row => tbody.appendChild(row));
        }


        function updateSortIcons(clickedHeader, order) {
            headers.forEach(header => {
                const icon = header.querySelector('.sort-icon');
                if (header !== clickedHeader) {
                    icon.innerHTML = '';
                } else {
                    icon.innerHTML = '';
                    const iconClass = order === 1 ? 'fa-arrow-down' : 'fa-arrow-up';
                    const iconElement = document.createElement('i');
                    iconElement.classList.add('fas', iconClass);
                    icon.appendChild(iconElement);
                }
            });
        }

        function getColumnIndex(columnName) {
            return Array.from(table.querySelectorAll('thead th')).findIndex(th => th.getAttribute('data-column') === columnName) + 1;
        }
    });

</script>
{% endblock %}
{% endblock %}